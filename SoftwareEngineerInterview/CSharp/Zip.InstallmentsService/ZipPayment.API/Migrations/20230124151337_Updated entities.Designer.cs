// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZipPayment.API.DataAccess.DbContexts;

#nullable disable

namespace ZipPayment.API.Migrations
{
    [DbContext(typeof(PaymentPlanContext))]
    [Migration("20230124151337_Updated entities")]
    partial class Updatedentities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("ZipPayment.API.Entities.InstallmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentPlanEntityId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanEntityId");

                    b.ToTable("InstallmentEntity");
                });

            modelBuilder.Entity("ZipPayment.API.Entities.PaymentPlanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PurchaseAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaymentPlans");
                });

            modelBuilder.Entity("ZipPayment.API.Entities.InstallmentEntity", b =>
                {
                    b.HasOne("ZipPayment.API.Entities.PaymentPlanEntity", "PaymentPlan")
                        .WithMany("Installments")
                        .HasForeignKey("PaymentPlanEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentPlan");
                });

            modelBuilder.Entity("ZipPayment.API.Entities.PaymentPlanEntity", b =>
                {
                    b.Navigation("Installments");
                });
#pragma warning restore 612, 618
        }
    }
}
